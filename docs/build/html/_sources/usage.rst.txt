Usage
=====

Basic Usage
----------

.. code-block:: python

    import wizardsdata as wsd

    # Configure the library
    wsd.set_config(
        API_KEY="your-api-key",
        template_client_prompt="templates/client.j2",
        template_advisor_prompt="templates/advisor.j2",
        file_profiles="profiles.json",
        file_output="output.json",
        model_client="gpt-4o-mini",
        model_advisor="gpt-4o-mini"
    )

    # Start generating conversations
    wsd.start_generation()

Configuration Parameters
-----------------------

Mandatory Parameters:

- ``API_KEY``: Your OpenAI API key
- ``template_client_prompt``: Path to the client template file
- ``template_advisor_prompt``: Path to the advisor template file
- ``file_profiles``: Path to the profiles JSON file
- ``file_output``: Path to save the output JSON file
- ``model_client``: Model to use for the client
- ``model_advisor``: Model to use for the advisor

Optional Parameters:

- Client Configuration:
  - ``temperature_client``: 0.7
  - ``top_p_client``: 0.95
  - ``frequency_penalty_client``: 0.3
  - ``max_tokens_client``: 175
  - ``max_recommended_questions``: 10

- Advisor Configuration:
  - ``temperature_advisor``: 0.5
  - ``top_p_advisor``: 0.9
  - ``frequency_penalty_advisor``: 0.1
  - ``max_tokens_advisor``: 325

Template Format
--------------

WizardSData uses Jinja2 templates for generating prompts. Here's an example of a client template:

.. code-block:: jinja

    You are a financial client with the following profile:
    - Age: {{ profile.age }}
    - Marital status: {{ profile.marital_status }}
    - Country: {{ profile.country }}
    - Financial goal: {{ profile.financial_goal }}

    You want to ask an advisor about {{ profile.financial_goal }}.

    Please conduct a conversation with the advisor, asking relevant questions.
    If you feel satisfied with the advice, end the conversation with "[END]".
    You can ask up to {{ max_questions }} questions.

Profile Format
-------------

Profiles should be provided in JSON format:

.. code-block:: json

    {
      "profiles": [
        {
          "id": 1,
          "age": 30,
          "marital_status": "Single",
          "country": "Spain",
          "residence_area": "Urban",
          "profession": "Software Developer",
          "employment_status": "Employed",
          "financial_products": ["Savings account", "Tech stocks"],
          "financial_goal": "Save for house deposit",
          "investment_horizon": "Medium-term",
          "risk_tolerance": "Moderate",
          "financial_knowledge": "Intermediate"
        }
      ]
    }

Advanced Usage
-------------

Saving and Loading Configuration:

.. code-block:: python

    # Save configuration
    wsd.save_config("config.json")
    
    # Load configuration
    wsd.load_config("config.json")